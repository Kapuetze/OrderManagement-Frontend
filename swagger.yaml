openapi: 3.0.1
info:
  title: OrderManagement.Api
  version: '1.0'
paths:
  /Account:
    get:
      tags:
        - Account
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          text/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: Success
  '/Account/{id}':
    get:
      tags:
        - Account
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Account'
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
            text/json:
              schema:
                $ref: '#/components/schemas/Account'
  /User:
    post:
      tags:
        - User
      parameters:
        - name: password
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        '200':
          description: Success
    get:
      tags:
        - User
      parameters:
        - name: id
          in: query
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserDTO'
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateModified:
          type: string
          format: date-time
          readOnly: true
        contact:
          $ref: '#/components/schemas/Contact'
        credit:
          type: number
          format: double
      additionalProperties: false
    Contact:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateModified:
          type: string
          format: date-time
          readOnly: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        company:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
      additionalProperties: false
    UserDTO:
      required:
        - email
        - userName
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateModified:
          type: string
          format: date-time
          readOnly: true
        email:
          minLength: 1
          type: string
        userName:
          minLength: 1
          type: string
        contact:
          $ref: '#/components/schemas/Contact'
      additionalProperties: false